# use asdf with direnv
# https://github.com/asdf-community/asdf-direnv
# you must direnv allow this file for it to work
# Added by install-asdf.sh on Thu Sep 30 23:25:03 CEST 2021
use asdf

# https://www.sixfeetup.com/blog/direnv-manage-environment-variables
# blend these variables with ones that above it
source_up_if_exists
dotenv_if_exists

# # https://unix.stackexchange.com/questions/575481/how-can-i-find-the-ancestor-directory-with-a-given-name
# look upwards to the directory before ./git
# use this if at root
# export WS_DIR="$HOME/ws"
# use this if in ws/git/src
pwd="$(PWD)" && export WS_DIR="${pwd%git${pwd#*git}}"

# python uv uses venv so if it exists and it is not activated, use it
if [[ -r .venv/bin/activate ]]; then source .venv/bin/activate; fi
#
# Added by install-1password.sh on Mon Sep  2 14:45:33 PDT 2024
# GITHUB_TOKEN_CLASSICneeded for ghcr.io docker pulls
# WEBUI_SECRET_KEY needed for open webui or else it will write a file.
[[ -v ANTHROPIC_API_KEY ]] || export "ANTHROPIC_API_KEY"="$(op item get "Anthropic API Key Dev" --fields "api key" --reveal)"
# [[ -v AWS_ACCESS_KEY_ID ]] || export "AWS_ACCESS_KEY_ID"="$(op item get "AWS Access Key" --fields "access key id" --reveal)"
# [[ -v AWS_SECRET_ACCESS_KEY ]] || export "AWS_SECRET_ACCESS_KEY"="$(op item get "AWS Access Key" --fields "secret access key" --reveal)"
[[ -v DEEPSEEK_API_KEY ]] || export "DEEPSEEK_API_KEY"="$(op item get "deepseek API Key Dev" --fields "api key" --reveal)"
# [[ -v DIGITALOCEAN_TOKEN ]] || export "DIGITALOCEAN_TOKEN"="$(op item get "DigitalOcean Personal Access Token" --fields "token" --reveal)"
[[ -v GEMINI_API_KEY ]] || export "GEMINI_API_KEY"="$(op item get "Google Gemini API Key Dev" --fields "api key" --reveal)"
# [[ -v GITHUB_TOKEN ]] || export "GITHUB_TOKEN"="$(op item get "GitHub Personal Access Token Dev" --fields "personal access token" --reveal)"
[[ -v GITHUB_TOKEN_CLASSIC ]] || export "GITHUB_TOKEN_CLASSIC"="$(op item get "GitHub Personal Access Token Classic" --fields "personal access token" --reveal)"
[[ -v GROQ_API_KEY ]] || export "GROQ_API_KEY"="$(op item get "Groq API Key Dev" --fields "api key" --reveal)"
[[ -v HF_TOKEN ]] || export "HF_TOKEN"="$(op item get "Hugging Face API Token Dev" --fields "user access token" --reveal)"
# [[ -v LOCALSTACK_API_KEY ]] || export "LOCALSTACK_API_KEY"="$(op item get "LocalStack API Key" --fields "api key" --reveal)"
[[ -v OPENAI_API_KEY ]] || export "OPENAI_API_KEY"="$(op item get "OpenAI API Key Dev" --fields "api key" --reveal)"
[[ -v OPENROUTER_API_KEY ]] || export "OPENROUTER_API_KEY"="$(op item get "OpenRouter Key Dev" --fields "key" --reveal)"
[[ -v REPLICATE_API_KEY ]] || export "REPLICATE_API_KEY"="$(op item get "Replicate API Token Dev" --fields "api token" --reveal)"
[[ -v SLASH_GPT_ENV_WEBPILOT_UID ]] || export "SLASH_GPT_ENV_WEBPILOT_UID"="$(op item get "Webpilot UID Dev" --fields "key" --reveal)"
# [[ -v SUPERSET_SECRET_KEY ]] || export "SUPERSET_SECRET_KEY"="$(op item get "Apache Superset Secret Key Dev" --fields "api key" --reveal)"
# needed for open webui or else it will write a file.
[[ -v WEBUI_SECRET_KEY ]] || export "WEBUI_SECRET_KEY"="$(op item get "Open WebUI Secret Key Dev" --fields "secret key" --reveal)"
[[ -v DEEPSEEK_API_KEY ]] || export "DEEPSEEK_API_KEY"="$(op item get "deepseek API Key Dev" --fields "api key" --reveal)"
